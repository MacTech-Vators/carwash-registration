{"version":3,"sources":["server.js"],"names":["express","require","app","cors","bodyParser","mysql","port","use","urlencoded","extended","json","db","createConnection","host","user","password","database","connect","err","console","error","log","get","req","resp","name","query","send","post","res","body","savecarwash","status","businessData","sql","values","membershipNumber","carWashName","registeredBusinessName","regitrationNo","businessBankAccount","sarsPin","ownership","nameAndSurname","ownersID","contactNumber","emailAddress","joiningDate","physicalAddress","line1","line2","city","province","gpsCoordinate","latitude","longitude","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAIC,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,QAAD,CAArB;;AACA,IAAMK,IAAI,GAAG,IAAb;AAEAJ,GAAG,CAACK,GAAJ,CAAQH,UAAU,CAACI,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQH,UAAU,CAACM,IAAX,EAAR;AACAR,GAAG,CAACK,GAAJ,CAAQJ,IAAI,EAAZ;AAEA,IAAMQ,EAAE,GAAGN,KAAK,CAACO,gBAAN,CAAuB;AAC9BC,EAAAA,IAAI,EAAE,WADwB;;AACX;AACnBC,EAAAA,IAAI,EAAE,MAFwB;;AAEX;AACnBC,EAAAA,QAAQ,EAAE,UAHoB;;AAGH;AAC3BC,EAAAA,QAAQ,EAAE;AAAU;;AAJU,CAAvB,CAAX,C,CAOA;;AACAL,EAAE,CAACM,OAAH,CAAW,UAACC,GAAD,EAAS;AAChB,MAAIA,GAAJ,EAAS;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAc,mCAAd,EAAmDF,GAAnD;AACH,GAFD,MAEO;AACHC,IAAAA,OAAO,CAACE,GAAR,CAAY,8BAAZ;AACH;AACJ,CAND;AASAnB,GAAG,CAACoB,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC7B,MAAMC,IAAI,GAAGF,GAAG,CAACG,KAAjB;AACAP,EAAAA,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0BI,IAA1B;AACAD,EAAAA,IAAI,CAACG,IAAL,wBAA0BF,IAAI,CAACA,IAA/B;AACH,CAJD;AAMAvB,GAAG,CAAC0B,IAAJ,CAAS,uBAAT,EAAkC,iBAAOL,GAAP,EAAYM,GAAZ;AAAA;AAAA;AAAA;AAAA;AAC9BV,UAAAA,OAAO,CAACE,GAAR,CAAYE,GAAG,CAACO,IAAhB;AACAC,UAAAA,WAAW,CAACR,GAAG,CAACO,IAAL,CAAX;AAEAD,UAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBL,IAAhB;;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC;;AAQA,SAASI,WAAT,CAAqBE,YAArB,EAAmC;AAC/B,MAAMC,GAAG,8UAAT,CAD+B,CAKnC;;AACI,MAAMC,MAAM,GAAG,CACXF,YAAY,CAACG,gBADF,EAEXH,YAAY,CAACI,WAFF,EAGXJ,YAAY,CAACK,sBAHF,EAIXL,YAAY,CAACM,aAJF,EAKXN,YAAY,CAACO,mBALF,EAMXP,YAAY,CAACQ,OANF,EAOXR,YAAY,CAACS,SAPF,EAQXT,YAAY,CAACU,cARF,EASXV,YAAY,CAACW,QATF,EAUXX,YAAY,CAACY,aAVF,EAWXZ,YAAY,CAACa,YAXF,EAYXb,YAAY,CAACc,WAZF,EAaXd,YAAY,CAACe,eAAb,CAA6BC,KAblB,EAcXhB,YAAY,CAACe,eAAb,CAA6BE,KAdlB,EAeXjB,YAAY,CAACe,eAAb,CAA6BG,IAflB,EAgBXlB,YAAY,CAACe,eAAb,CAA6BI,QAhBlB,EAiBXnB,YAAY,CAACe,eAAb,CAA6BK,aAA7B,CAA2CC,QAjBhC,EAkBXrB,YAAY,CAACe,eAAb,CAA6BK,aAA7B,CAA2CE,SAlBhC,CAAf;AAqBA5C,EAAAA,EAAE,CAACe,KAAH,CAASQ,GAAT,EAAcC,MAAd,EAAsB,UAACjB,GAAD,EAAMW,GAAN,EAAc;AAChC,QAAIX,GAAJ,EAAS;AACLC,MAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd,EAAuCF,GAAvC;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACE,GAAR,CAAY,6BAAZ,EAA2CQ,GAA3C;AACH;AACJ,GAND;AAOH;;AAGD3B,GAAG,CAACsD,MAAJ,CAAWlD,IAAX,EAAiB,YAAK;AAClBa,EAAAA,OAAO,CAACE,GAAR,uCAA2Cf,IAA3C;AACH,CAFD","sourcesContent":["const express =  require('express');  \r\nconst app = express();\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser')\r\nconst mysql = require('mysql2');\r\nconst port = 5000;\r\n\r\napp.use(bodyParser.urlencoded({extended:true}));\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\nconst db = mysql.createConnection({\r\n    host: 'localhost', /* MySQL host*/\r\n    user: 'root',      /* MySQL username*/\r\n    password: 'password',      /* MySQL password*/\r\n    database: 'carwash' /* database name*/\r\n});\r\n\r\n// Connect to the database\r\ndb.connect((err) => {\r\n    if (err) {\r\n        console.error('Error connecting to the database:', err);\r\n    } else {\r\n        console.log('Connected to MySQL database.');\r\n    }\r\n});\r\n\r\n\r\napp.get('/thabo', (req, resp) => {\r\n    const name = req.query;\r\n    console.log('response: ', name);\r\n    resp.send(`hello T-Bose ${name.name}`);\r\n})\r\n\r\napp.post('/nacwo/api/v1/carwash', async (req, res) =>{\r\n    console.log(req.body);\r\n    savecarwash(req.body);\r\n\r\n    res.status(201).send(`Successfully created`);\r\n})\r\n\r\n\r\nfunction savecarwash(businessData) {\r\n    const sql = `\r\n    INSERT INTO business_info (membershipNumber, carWashName, registeredBusinessName, regitrationNo, businessBankAccount, sarsPin, ownership, nameAndSurname, ownersID, contactNumber, emailAddress, joiningDate, line1, line2, city, province, latitude, longitude)\r\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`;\r\n\r\n// Values from the request body\r\n    const values = [\r\n        businessData.membershipNumber,\r\n        businessData.carWashName,\r\n        businessData.registeredBusinessName,\r\n        businessData.regitrationNo,\r\n        businessData.businessBankAccount,\r\n        businessData.sarsPin,\r\n        businessData.ownership,\r\n        businessData.nameAndSurname,\r\n        businessData.ownersID,\r\n        businessData.contactNumber,\r\n        businessData.emailAddress,\r\n        businessData.joiningDate,\r\n        businessData.physicalAddress.line1,\r\n        businessData.physicalAddress.line2,\r\n        businessData.physicalAddress.city,\r\n        businessData.physicalAddress.province,\r\n        businessData.physicalAddress.gpsCoordinate.latitude,\r\n        businessData.physicalAddress.gpsCoordinate.longitude\r\n    ];\r\n\r\n    db.query(sql, values, (err, res) => {\r\n        if (err) {\r\n            console.error('Error inserting data:', err);\r\n        } else {\r\n            console.log('Data inserted successfully:', res);\r\n        }\r\n    });\r\n}\r\n\r\n\r\napp.listen(port, ()=> {\r\n    console.log(`application started on port ${port}`)\r\n})"],"file":"server.dev.js"}