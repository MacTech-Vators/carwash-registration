{"version":3,"sources":["server.js"],"names":["express","require","app","bodyParser","port","use","urlencoded","extended","cors","db","mysql","createConnection","database","console","savecarwash","businessData","resp","values","membershipNumber","carWashName","registeredBusinessName","res","regitrationNo","businessBankAccount","sarsPin","ownership","nameAndSurname","ownersID","contactNumber","emailAddress","joiningDate","physicalAddress","line1","line2","sql","city","province","query","gpsCoordinate","longitude","err","error","log","host","req","name","send","concat","post","regeneratorRuntime","async","_context","prev","next","body","status","stop","listen"],"mappings":"aAAA,IAAMA,QAAWC,QAAQ,WACnBC,IAAMF,UADNA,KAAOC,QAAW,QAGlBE,WAAaF,QAAQ,eAFrBC,MAAMF,QAAZ,UAIMI,KAAO,IAEbF,IAAIG,IAAIF,WAAWG,WAAW,CAACC,UAAS,KAJxCL,IAAMC,IAAAA,WAAaF,QAMnBC,IAAIG,IAAIG,QAER,IAAMC,GAAKC,MAAMC,iBAAiB,CAN5BP,KAAI,YAENC,KAAIF,OAAuBI,SAAS,WAAxCK,SAAA,YAuBIC,SAAOC,YAAKC,GACZC,IAG8BC,EAAA,CAAAF,EAAAG,iBAC9BL,EAAAM,YACAL,EAAWM,uBAEXC,EAAWC,cAePP,EAAaQ,oBAnBaR,EAAAS,QAAAT,EAAAU,UAAAV,EAAAW,eAAAX,EAAAY,SAAAZ,EAAAa,cAAAb,EAAAc,aAAlCd,EAAAe,YA2BQf,EAAagB,gBAAgBC,MAnBrCjB,EAAqBA,gBAAckB,MACzBC,EAAGH,gBAAAI,KAqBLpB,EAAagB,gBAAgBK,SAhB3BnB,EACFF,gBAAaG,cACbH,SAmBDsB,EAAWpB,gBAAQqB,cAAcC,WAG/B9B,GAFD4B,MAvCJ,4UAyCWpB,EAAA,SAAAuB,EAAAnB,GACHR,EACHA,QAAA4B,MAAA,wBAAAD,GAER3B,QAAA6B,IAAA,8BAAArB,KAhEGsB,GAAAA,QAAM,SAAAH,GAQFA,EARe3B,QAAA4B,MAAA,oCAAAD,GAWf3B,QAAQ6B,IAAI,kCARhB9B,IAAAA,IAAAA,SAAU,SAAAgC,EAAA5B,GAAU,IAAA6B,EAAAD,EAAAP,MAepBxB,QAAQ6B,IAAI,aAAcG,GAZ9B7B,EAAA8B,KAAA,gBAAAC,OAAAF,EAAAA,SAEI3C,IAAA8C,KAAA,wBAAS,SAAAJ,EAAAvB,GAAA,OAAA4B,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EACLxC,QAAQ4B,IAAAA,EAAMa,MADlBxC,YAEO8B,EAAAU,MAENjC,EAAAkC,OAAA,KAAAT,KAAA,wBAJQ,KAAA,EAAA,IAAA,MAAA,OAAAK,EAAAK,YA2DbtD,IAAIuD,OAAOrD,KAAM,WACbS,QAAQ6B,IAAR,+BAAAK,OAA2C3C","file":"server.min.js","sourcesContent":["const express =  require('express');  \r\nconst app = express();\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser')\r\nconst mysql = require('mysql2');\r\nconst port = 5000;\r\n\r\napp.use(bodyParser.urlencoded({extended:true}));\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\nconst db = mysql.createConnection({\r\n    host: 'localhost', /* MySQL host*/\r\n    user: 'root',      /* MySQL username*/\r\n    password: 'password',      /* MySQL password*/\r\n    database: 'carwash' /* database name*/\r\n});\r\n\r\n// Connect to the database\r\ndb.connect((err) => {\r\n    if (err) {\r\n        console.error('Error connecting to the database:', err);\r\n    } else {\r\n        console.log('Connected to MySQL database.');\r\n    }\r\n});\r\n\r\n\r\napp.get('/thabo', (req, resp) => {\r\n    const name = req.query;\r\n    console.log('response: ', name);\r\n    resp.send(`hello T-Bose ${name.name}`);\r\n})\r\n\r\napp.post('/nacwo/api/v1/carwash', async (req, res) =>{\r\n    console.log(req.body);\r\n    savecarwash(req.body);\r\n\r\n    res.status(201).send(`Successfully created`);\r\n})\r\n\r\n\r\nfunction savecarwash(businessData) {\r\n    const sql = `\r\n    INSERT INTO business_info (membershipNumber, carWashName, registeredBusinessName, regitrationNo, businessBankAccount, sarsPin, ownership, nameAndSurname, ownersID, contactNumber, emailAddress, joiningDate, line1, line2, city, province, latitude, longitude)\r\n    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`;\r\n\r\n// Values from the request body\r\n    const values = [\r\n        businessData.membershipNumber,\r\n        businessData.carWashName,\r\n        businessData.registeredBusinessName,\r\n        businessData.regitrationNo,\r\n        businessData.businessBankAccount,\r\n        businessData.sarsPin,\r\n        businessData.ownership,\r\n        businessData.nameAndSurname,\r\n        businessData.ownersID,\r\n        businessData.contactNumber,\r\n        businessData.emailAddress,\r\n        businessData.joiningDate,\r\n        businessData.physicalAddress.line1,\r\n        businessData.physicalAddress.line2,\r\n        businessData.physicalAddress.city,\r\n        businessData.physicalAddress.province,\r\n        businessData.physicalAddress.gpsCoordinate.latitude,\r\n        businessData.physicalAddress.gpsCoordinate.longitude\r\n    ];\r\n\r\n    db.query(sql, values, (err, res) => {\r\n        if (err) {\r\n            console.error('Error inserting data:', err);\r\n        } else {\r\n            console.log('Data inserted successfully:', res);\r\n        }\r\n    });\r\n}\r\n\r\n\r\napp.listen(port, ()=> {\r\n    console.log(`application started on port ${port}`)\r\n})"]}